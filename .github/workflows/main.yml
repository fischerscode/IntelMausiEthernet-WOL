name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

env:
  PROJECT_TYPE: KEXT

jobs:
  build:
    name: Build
    runs-on: macos-latest
    env:
      JOB_TYPE: BUILD
    steps:
      - uses: actions/checkout@v2

      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/ocbuild/master/ci-bootstrap.sh) && eval "$src" || exit 1
      - name: Lilu Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" || exit 1

      - run: xcodebuild -jobs 1 -configuration Debug
      - run: xcodebuild -jobs 1 -configuration Release

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: |
            build/Debug
            build/Release
      - name: Set env
        if: github.event_name == 'release'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Prepair dir
        if: github.event_name == 'release'
        run: |
          mkdir IntelMausiEthernet-WoL-${{ env.RELEASE_VERSION }}
          cp -r build/Debug build/Release IntelMausiEthernet-WoL-${{ env.RELEASE_VERSION }}
      - name: zip Debug and release 
        uses: papeloto/action-zip@v1
        with:
          files: IntelMausiEthernet-WoL-${{ env.RELEASE_VERSION }}
          dest: IntelMausiEthernet-WoL-${{ env.RELEASE_VERSION }}.zip
          recursive: false
      - name: Upload to Release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: IntelMausiEthernet-WoL-${{ env.RELEASE_VERSION }}.zip
          tag: ${{ github.ref }}

  analyze-clang:
    name: Analyze Clang
    runs-on: macos-latest
    if: false
    env:
      JOB_TYPE: ANALYZE
    steps:
      - uses: actions/checkout@v2

      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/ocbuild/master/ci-bootstrap.sh) && eval "$src" || exit 1
      - name: Lilu Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" || exit 1

      - run: xcodebuild analyze -quiet -scheme IntelMausiEthernet -configuration Debug CLANG_ANALYZER_OUTPUT=plist-html CLANG_ANALYZER_OUTPUT_DIR="$(pwd)/clang-analyze" && [ "$(find clang-analyze -name "*.html")" = "" ]
      - run: xcodebuild analyze -quiet -scheme IntelMausiEthernet -configuration Release CLANG_ANALYZER_OUTPUT=plist-html CLANG_ANALYZER_OUTPUT_DIR="$(pwd)/clang-analyze" && [ "$(find clang-analyze -name "*.html")" = "" ]